<?xml version="1.0" encoding="UTF-8"?>
<web-app id="PAW" version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>PAW test application</display-name>

    <!-- Si queremos que cuando ocurre cierto error code, redirigir a cierta página, podemos hacerlo así: -->
    <!-- <error-page>
        <error-code>500</error-code>
        <location>/500</location>
    </error-page> -->

    <context-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            ar.edu.itba.paw.webapp.config.WebConfig,
            ar.edu.itba.paw.webapp.config.WebAuthConfig
        </param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--
        Tenemos dos formas de mapear los archivos css. Una es la que está habilitada, que es agregando resource handlers
        en WebConfig.addResourceHandlers(), y la otra es con un servlet mapping como se muestra en este comentario:
    -->
    <!--<servlet-mapping>
      <servlet-name>default</servlet-name>
      <url-pattern>*.css</url-pattern>
    </servlet-mapping>-->

    <!--
        Agregamos un filtro de requests para spring-security. El filtro es de tipo DelegatingFilterProxy, que lo que
        hace es delegar el filtrado a otro. En este caso, lo delega a springSecurityFilterChain.
    -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- También debemos especificar sobre qué URLs se aplica el filtro: -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>